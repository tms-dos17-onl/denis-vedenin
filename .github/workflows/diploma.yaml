name: Diplom

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: my-project-kubernetes-409711-cluster    # cluster name
  GKE_ZONE: europe-west10  # cluster zone

jobs: 
  Build_and_Publish_Docker:
    runs-on: ubuntu-latest
    needs: Terraform_GKE
    defaults:
      run:
        working-directory: ./diplom
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v3
      - name: Cheking file
        run: ls -la
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_TEST }}
    
      - name: Build and push Docker image
        run: | 
          docker build -t vedenindenis/diplom_web:${{github.run_number}} .
          docker push vedenindenis/diplom_web:${{github.run_number}}



  Terraform_GKE:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./diplom/.infra
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        run: terraform plan

      - name: Terraform aplly
        run: terraform apply -auto-approve

  K8S:
    runs-on: ubuntu-latest
    needs: [Terraform_GKE, Build_and_Publish_Docker]
    defaults:
      run:
        working-directory: ./diplom/.k8s
    timeout-minutes: 10
    steps:

      - name: code checkout
        uses: actions/checkout@v2

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Install LoadBalancer 
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.9.5/deploy/static/provider/cloud/deploy.yaml

      - name: Install BD 
        run: kubectl apply -f ./db-web/postgres.yaml

      - name: Sleep 1 minutes for up BD
        uses: GuillaumeFalourd/wait-sleep-action@v1
        with:
          time: '1m' # for 1 minute
      
      - name: Install Web Application 
        run: kubectl apply -f ./app-web/web-app.yaml

      - name: Install LoadBalancer rules
        run: kubectl apply -f ./inController/ingress.yaml

      - name: Test service and pods
        run: |
          kubectl get nodes
          kubectl get services -o wide -n ingress-nginx
          kubectl get pods -o wide -n ingress-nginx
          kubectl get ingress -n ingress-nginx


  Prometheus_and_Grafana:
    runs-on: ubuntu-latest
    needs: [Terraform_GKE]
    defaults:
      run:
        working-directory: ./diplom
    timeout-minutes: 10
    steps:

      - name: code checkout
        uses: actions/checkout@v2

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
      
      - name: Install Prometheus and Grafana
        run: |
          helm repo add stable https://charts.helm.sh/stable
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          kubectl create namespace prometheus
          helm install stable prometheus-community/kube-prometheus-stack -n prometheus
          kubectl get pods -n prometheus
          kubectl get svc -n prometheus
          kubectl patch svc stable-kube-prometheus-sta-prometheus -n prometheus -p '{"spec": {"type": "LoadBalancer"}}'
          kubectl patch svc stable-grafana -n prometheus -p '{"spec": {"type": "LoadBalancer"}}'
          kubectl get pods -n prometheus
          kubectl get svc -n prometheus
          echo "Name:admin"
          echo "Password:prom-operator"
