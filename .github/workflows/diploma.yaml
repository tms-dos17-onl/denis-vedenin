name: Diplom

on:
  push:
    branches:
      - main

env:
  # PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: my-project-kubernetes-409711-gke    # cluster name
  GKE_ZONE: us-central1  # cluster zone

jobs:
  # Build_and_Publish_Docker:
  #   runs-on: ubuntu-latest
  #   needs: Terraform_GKE
  #   defaults:
  #     run:
  #       working-directory: ./diplom
  #   timeout-minutes: 3
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Cheking file
  #       run: ls -la
      
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_TEST }}
    
  #     - name: Build and push Docker image
  #       run: | 
  #         docker build -t vedenindenis/diplom_web:latest .
  #         docker push vedenindenis/diplom_web:latest



  # Terraform_GKE:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./diplom/.infra
  #   timeout-minutes: 20
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Terraform Format
  #       id: fmt
  #       run: terraform fmt -check

  #     - name: Terraform init
  #       run: terraform init

  #     - name: Terraform plan
  #       run: terraform plan

  #     - name: Terraform aplly
  #       run: terraform apply -auto-approve

  K8S:
    runs-on: ubuntu-latest
    needs: [Terraform_GKE]
    defaults:
      run:
        working-directory: ./diplom/.k8s
    timeout-minutes: 10
    steps:

      - name: code checkout
        uses: actions/checkout@v2

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Deploy
        run: |
          kubectl get nodes
          kubectl apply -f 1-nginx_deploy.yaml
          kubectl apply -f 2-tomcat_deploy.yaml

      - uses: GuillaumeFalourd/wait-sleep-action@v1
        with:
          time: '2m' # for 1 minute

      - name: Test service and pods
        run: |
          kubectl get nodes
          kubectl get services
          kubectl get pods -o wide 